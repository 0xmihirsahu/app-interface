3) Add the workflow to the repo

Create .github/workflows/deploy.yml:

name: Deploy to EC2

on:
  push:
    branches: [ "main" ]  # change if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          passphrase: ${{ secrets.EC2_SSH_PASSPHRASE }} # omit this line if your key has NO passphrase
          script_stop: true
          script: |
            set -e
            cd ${{ secrets.EC2_PATH }}

            # First-time clone (idempotent)
            if [ ! -d ".git" ]; then
              git clone git@github.com:SpoutFinance/app-interface.git .
            fi

            git fetch --all --prune
            git reset --hard origin/main

            # Load nvm & Node
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm use --lts

            # Install & build
            if [ -f package-lock.json ]; then npm ci; else npm i; fi
            npm run build

            # PM2 start/reload
            if [ ! -f ecosystem.config.js ]; then
              cat > ecosystem.config.js <<'EOF'
              module.exports = {
                apps: [{
                  name: "spout-finance",
                  script: "node_modules/next/dist/bin/next",
                  args: "start -p 3000",
                  cwd: "${{ secrets.EC2_PATH }}",
                  env: { NODE_ENV: "production" }
                }]
              }
              EOF
            fi

            pm2 reload ecosystem.config.js --update-env || pm2 start ecosystem.config.js
            pm2 save